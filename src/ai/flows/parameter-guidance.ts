// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview A flow to provide AI-powered suggestions for adjusting node parameters in the image synthesis system.
 *
 * - getParameterGuidance - A function that takes the current state of the node canvas and returns suggestions for parameter adjustments.
 * - ParameterGuidanceInput - The input type for the getParameterGuidance function.
 * - ParameterGuidanceOutput - The return type for the getParameterGuidance function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ParameterGuidanceInputSchema = z.object({
  canvasState: z.string().describe('The current state of the node canvas, represented as a JSON string.'),
  userPrompt: z.string().describe('The user prompt for the image synthesis.'),
});
export type ParameterGuidanceInput = z.infer<typeof ParameterGuidanceInputSchema>;

const ParameterGuidanceOutputSchema = z.object({
  suggestions: z.array(
    z.object({
      nodeName: z.string().describe('The name of the node to adjust.'),
      parameter: z.string().describe('The parameter to adjust on the node.'),
      suggestedValue: z.any().describe('The suggested value for the parameter.'),
      reason: z.string().describe('The reason for the suggested adjustment.'),
    })
  ).describe('A list of suggestions for parameter adjustments.'),
});
export type ParameterGuidanceOutput = z.infer<typeof ParameterGuidanceOutputSchema>;

export async function getParameterGuidance(input: ParameterGuidanceInput): Promise<ParameterGuidanceOutput> {
  return parameterGuidanceFlow(input);
}

const parameterGuidancePrompt = ai.definePrompt({
  name: 'parameterGuidancePrompt',
  input: {schema: ParameterGuidanceInputSchema},
  output: {schema: ParameterGuidanceOutputSchema},
  prompt: `You are an AI assistant that provides guidance to users of an AI image synthesis system.
  The user is currently working with a node canvas that has the following state:
  {{canvasState}}

  The user is trying to generate an image based on the following prompt:
  {{userPrompt}}

  Based on the current canvas state and the user's prompt, suggest adjustments to node parameters that would help the user achieve their desired image.
  Provide a list of suggestions, including the node name, the parameter to adjust, the suggested value, and a brief reason for the suggestion.
  Do not suggest more than 3 adjustments.
  Consider a variety of different parameters that can be changed.
  Consider the user prompt when determining which parameters to adjust.
  `,
});

const parameterGuidanceFlow = ai.defineFlow(
  {
    name: 'parameterGuidanceFlow',
    inputSchema: ParameterGuidanceInputSchema,
    outputSchema: ParameterGuidanceOutputSchema,
  },
  async input => {
    const {output} = await parameterGuidancePrompt(input);
    return output!;
  }
);
